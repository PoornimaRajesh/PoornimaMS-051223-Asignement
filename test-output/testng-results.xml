<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="5" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-12-05T20:38:15 IST" name="Suite" finished-at="2023-12-05T20:38:44 IST" duration-ms="29329">
    <groups>
    </groups>
    <test started-at="2023-12-05T20:38:15 IST" name="Test" finished-at="2023-12-05T20:38:44 IST" duration-ms="29329">
      <class name="PracticeSelenium.Login">
        <test-method is-config="true" signature="verifyLogin()[pri:0, instance:PracticeSelenium.Login@8519cb4]" started-at="2023-12-05T20:38:28 IST" name="verifyLogin" finished-at="2023-12-05T20:38:32 IST" duration-ms="3594" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLogin -->
        <test-method signature="verifyWithInvalidCredentials()[pri:1, instance:PracticeSelenium.Login@8519cb4]" started-at="2023-12-05T20:38:32 IST" name="verifyWithInvalidCredentials" finished-at="2023-12-05T20:38:33 IST" duration-ms="1065" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyWithInvalidCredentials -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:PracticeSelenium.Login@8519cb4]" started-at="2023-12-05T20:38:33 IST" name="closeBrowser" finished-at="2023-12-05T20:38:33 IST" duration-ms="242" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="generateStatus(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:PracticeSelenium.Login@8519cb4]" started-at="2023-12-05T20:38:33 IST" name="generateStatus" finished-at="2023-12-05T20:38:33 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void PracticeSelenium.Login.verifyWithInvalidCredentials()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=verifyWithInvalidCredentials status=SUCCESS method=Login.verifyWithInvalidCredentials()[pri:1, instance:PracticeSelenium.Login@8519cb4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateStatus -->
        <test-method is-config="true" signature="verifyLogin()[pri:0, instance:PracticeSelenium.Login@8519cb4]" started-at="2023-12-05T20:38:33 IST" name="verifyLogin" finished-at="2023-12-05T20:38:37 IST" duration-ms="3632" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLogin -->
        <test-method signature="verifyWithValidCredentials()[pri:2, instance:PracticeSelenium.Login@8519cb4]" started-at="2023-12-05T20:38:37 IST" name="verifyWithValidCredentials" finished-at="2023-12-05T20:38:38 IST" duration-ms="1090" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyWithValidCredentials -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:PracticeSelenium.Login@8519cb4]" started-at="2023-12-05T20:38:38 IST" name="closeBrowser" finished-at="2023-12-05T20:38:38 IST" duration-ms="267" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="generateStatus(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:PracticeSelenium.Login@8519cb4]" started-at="2023-12-05T20:38:38 IST" name="generateStatus" finished-at="2023-12-05T20:38:38 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void PracticeSelenium.Login.verifyWithValidCredentials()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=verifyWithValidCredentials status=SUCCESS method=Login.verifyWithValidCredentials()[pri:2, instance:PracticeSelenium.Login@8519cb4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateStatus -->
        <test-method is-config="true" signature="verifyLogin()[pri:0, instance:PracticeSelenium.Login@8519cb4]" started-at="2023-12-05T20:38:38 IST" name="verifyLogin" finished-at="2023-12-05T20:38:42 IST" duration-ms="3911" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLogin -->
        <test-method signature="assertAfterLogin()[pri:3, instance:PracticeSelenium.Login@8519cb4]" started-at="2023-12-05T20:38:42 IST" name="assertAfterLogin" finished-at="2023-12-05T20:38:44 IST" duration-ms="1681" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- assertAfterLogin -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:PracticeSelenium.Login@8519cb4]" started-at="2023-12-05T20:38:44 IST" name="closeBrowser" finished-at="2023-12-05T20:38:44 IST" duration-ms="305" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="generateStatus(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:PracticeSelenium.Login@8519cb4]" started-at="2023-12-05T20:38:44 IST" name="generateStatus" finished-at="2023-12-05T20:38:44 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void PracticeSelenium.Login.assertAfterLogin()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=assertAfterLogin status=SUCCESS method=Login.assertAfterLogin()[pri:3, instance:PracticeSelenium.Login@8519cb4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateStatus -->
      </class> <!-- PracticeSelenium.Login -->
      <class name="PracticeSelenium.Registration">
        <test-method is-config="true" signature="InitExentReport()[pri:0, instance:PracticeSelenium.Registration@7161d8d1]" started-at="2023-12-05T20:38:14 IST" name="InitExentReport" finished-at="2023-12-05T20:38:15 IST" duration-ms="781" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InitExentReport -->
        <test-method is-config="true" signature="getnameMethod(org.testng.ITestContext)[pri:0, instance:PracticeSelenium.Registration@7161d8d1]" started-at="2023-12-05T20:38:15 IST" name="getnameMethod" finished-at="2023-12-05T20:38:15 IST" duration-ms="24" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@c4d2c44]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getnameMethod -->
        <test-method is-config="true" signature="openApplication()[pri:0, instance:PracticeSelenium.Registration@7161d8d1]" started-at="2023-12-05T20:38:15 IST" name="openApplication" finished-at="2023-12-05T20:38:22 IST" duration-ms="6636" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApplication -->
        <test-method signature="verifyErrorMessagesInRegistration()[pri:1, instance:PracticeSelenium.Registration@7161d8d1]" started-at="2023-12-05T20:38:22 IST" name="verifyErrorMessagesInRegistration" finished-at="2023-12-05T20:38:22 IST" duration-ms="650" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyErrorMessagesInRegistration -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:PracticeSelenium.Registration@7161d8d1]" started-at="2023-12-05T20:38:22 IST" name="closeBrowser" finished-at="2023-12-05T20:38:22 IST" duration-ms="265" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="generateStatus(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:PracticeSelenium.Registration@7161d8d1]" started-at="2023-12-05T20:38:22 IST" name="generateStatus" finished-at="2023-12-05T20:38:22 IST" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void PracticeSelenium.Registration.verifyErrorMessagesInRegistration()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=verifyErrorMessagesInRegistration status=SUCCESS method=Registration.verifyErrorMessagesInRegistration()[pri:1, instance:PracticeSelenium.Registration@7161d8d1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateStatus -->
        <test-method is-config="true" signature="openApplication()[pri:0, instance:PracticeSelenium.Registration@7161d8d1]" started-at="2023-12-05T20:38:23 IST" name="openApplication" finished-at="2023-12-05T20:38:26 IST" duration-ms="3751" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApplication -->
        <test-method signature="verifyRegistration()[pri:2, instance:PracticeSelenium.Registration@7161d8d1]" started-at="2023-12-05T20:38:26 IST" name="verifyRegistration" finished-at="2023-12-05T20:38:28 IST" duration-ms="1774" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegistration -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:PracticeSelenium.Registration@7161d8d1]" started-at="2023-12-05T20:38:28 IST" name="closeBrowser" finished-at="2023-12-05T20:38:28 IST" duration-ms="313" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="generateStatus(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:PracticeSelenium.Registration@7161d8d1]" started-at="2023-12-05T20:38:28 IST" name="generateStatus" finished-at="2023-12-05T20:38:28 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void PracticeSelenium.Registration.verifyRegistration()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=verifyRegistration status=SUCCESS method=Registration.verifyRegistration()[pri:2, instance:PracticeSelenium.Registration@7161d8d1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateStatus -->
        <test-method is-config="true" signature="generateReports()[pri:0, instance:PracticeSelenium.Registration@7161d8d1]" started-at="2023-12-05T20:38:44 IST" name="generateReports" finished-at="2023-12-05T20:38:51 IST" duration-ms="6688" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReports -->
      </class> <!-- PracticeSelenium.Registration -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
